#!/bin/bash

if [ ! -d "docroot" ]; then
  echo 'Please be sure that you are running this command from your project root.'
  exit 1
fi

# Add prompt for the profile name, so the site can be installed
read -p "What is the name of the profile for the site? " PROFILE_NAME

# Remove spaces and lowercase the profile name
PROFILE_NAME=$(sed 's/ /_/g' <<< $PROFILE_NAME | awk '{print tolower($0)}')

# Add prompt for the client name
read -p "What is the client's name? " CLIENT_NAME

# Rename functions in the profile
grep -rl "sb_client" . | grep -v 'init|\.git|default' | xargs sed -i '' -e "s/sb_client/$PROFILE_NAME/g"

# Rename generic profile directory
find docroot/profiles/ -name "*sb_client*" -type d | while read directory; do mv "$directory" "${directory/sb_client/$PROFILE_NAME}"; done

# Rename generic profile filenames
find docroot/profiles/ -name "*sb_client*" -type f | while read filename; do mv "$filename" "${filename/sb_client/$PROFILE_NAME}"; done

# Insert entered client name in install profile, theme info file, readme, and more
grep -rl 'CLIENT_NAME' . | egrep -v 'init|\.git|default' | xargs sed -i '' -e "s/CLIENT_NAME/$CLIENT_NAME/g"

# Add prompt for email addy
read -p "What is your email address? " EMAIL_ADDY
grep -rl 'EMAIL_ADDY' docroot/ | grep -v devify | xargs sed -i '' -e "s/EMAIL_ADDY/$EMAIL_ADDY/g"

THEME_EXTENSION="_theme"
THEME_NAME="$PROFILE_NAME$THEME_EXTENSION"

# Rename theme template functions with the new name
grep -rl "sb_template" . | egrep -v 'init|\.git' | xargs sed -i '' -e "s/sb_template/$THEME_NAME/g"

# Rename the theme directory
find docroot/sites/all/ -name "*sb_template*" -type d | while read theme_directory; do mv "$theme_directory" "${theme_directory/sb_template/$THEME_NAME}"; done

# Rename the theme .info and other files
find docroot/sites/all/ -name "*sb_template*" -type f | while read theme_filename; do mv "$theme_filename" "${theme_filename/sb_template/$THEME_NAME}"; done

# rename the readme
mv "readme.md" "sb-drupal-bootstrap.md"

# create a new readme
echo -e "# $CLIENT_NAME" >> readme.md

# delete this file
rm bin/init

# Ask about initialization of git, defaulting to yes
read -p "Initialize a git repository? [y]: " INIT_GIT
INIT_GIT=${INIT_GIT:-y}

# Initialize git if it hasn't been installed
if [ "$INIT_GIT" = "y" ]; then
  if [ ! -d ".git" ]; then
    git init
    git add .
    git commit -m 'Initial commit'
  else
    echo "You already have a .git directory!"
    exit 2
  fi
fi

echo "Congratulations! Your new site is ready for installation!\n"

exit 0
